name: Deploy to ECR and EC2

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-northeast-2
          aws-access-key-id: ${{ secret.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build Docker Image
        run: docker build -t member-service:latest .

      - name: Tag Docker Image
        run: docker tag member-service:latest ${{ steps.login-ecr.outputs.registry }}/learn-run/member-service:latest

      - name: Push Docker Image to ECR
        run: docker push ${{ steps.login-ecr.outputs.registry }}/learn-run/member-service:latest

      - name: Deploy on EC2 via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script_stop: true
          script: |
            echo "MYSQL_HOST=${{ secrets.MYSQL_HOST }}" > .env
            echo "MYSQL_USER=${{ secrets.MYSQL_USER }}" >> .env
            echo "MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}" >> .env
            
            docker pull ${{ steps.login-ecr.outputs.registry }}/learn-run/member-service:latest
            docker-compose down
            docker-compose up -d --remove-orphans
            docker image prune -f
            docker-compose logs -f